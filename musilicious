#!/usr/bin/env perl
use strict;
use warnings;
use Mojolicious::Lite;
use Mojo::ByteStream 'b';

use Audio::MPD;
use Scalar::Util qw(blessed);
#use Carp qw(confess); $SIG{__WARN__} = \&confess;
use Data::Dumper;

# Hey, what kinda party is this? There's no booze and only one hooker.

my %action_map =
(
    playpause => 'pause',
    play => 'play',
    stop => 'stop',
    next => 'next',
    prev => 'prev',
    volume => 'volume',
    seek => 'seek',
    playlist_clear => [ 'playlist', 'clear' ],
    playlist_add => [ 'playlist', 'add' ],
    playlist_delete => [ 'playlist', 'deleteid' ],
    'collection_to playlist' => [ 'playlist', 'add' ],
    playlist_play => sub { return ['playid'], [ (shift) ] },
);

my $mpd = Audio::MPD->new(host => 'localhost', port => '6600');

get '/' => sub
{
    my $self = shift;


    $self->render( _status() );

} => 'player';


get '/collection/(*path)' => { path => '' } => sub
{
    my $self = shift;
    my $path = $self->stash('path');


    my @files = $mpd->collection->items_in_dir($path);

    my @songs =  grep { $_->isa('Audio::MPD::Common::Item::Song') } @files;
    my @playlists =  grep { $_->isa('Audio::MPD::Common::Item::Playlist') } @files;
    my @directories =  grep { $_->isa('Audio::MPD::Common::Item::Directory') } @files;

    my $parent = $path;
    $parent =~ s/\/?[^\/]*$//; # KISS

    $self->render
    (
        songs => \@songs,
        playlists => \@playlists,
        directories => \@directories,
        playlist => $mpd->playlist,
        parent => $parent
    );

} => 'editor';


get '/action/:action' => sub
{
    my $self = shift;
    my $action = $self->stash('action');


    _action($action);
    $self->redirect_to('player');

} => 'action';

post '/action/:source' => sub
{
    my $self = shift;
    my $source = $self->stash('source');
    my @list = $self->param('data');
    my $action = $source . '_' . $self->param('action');

    if ($action_map{$action})
    {
        my $o;
        my $m;

        if (ref $action_map{$action} eq 'CODE')
        {
            my ($target, $value) = $action_map{$action}->(@list);
            ($o, $m) = @$target;

        } else {
            
            ($o, $m) = @{ $action_map{$action} };
        }
        warn "!!!!                calling mpd->$o->$m(@list)";
        if ($m)
        {
            $mpd->$o->$m(@list);
        } else {
            $mpd->$o(@list);
        }
        $self->redirect_to('player');
    } else
    {
        die "invalid action: $action";
    }

} => 'action_post';


# JSON RPC for Ajax-Requests

get '/rpc/:action/:value' => { action => 'noop', value => 0 } => sub
{
    my $self = shift;
    my $action = $self->stash('action');
    my $value = $self->stash('value');

    _action($action, $value) unless $action eq 'noop';

    $self->render_json({ _status() });
} => 'rpc';

post '/rpc/:action' => sub
{
    my $self = shift;
    my @list = $self->param('data[]');
    my $action = $self->stash('action');

    if (my ($o, $m) = @{ $action_map{$action} })
    {
        $mpd->$o->$m(@list);
    }

    $self->render_json({ _status() });
} => 'rpc_post';

# Static file delivery

get '/static/(*path)' => sub
{
    app->static; # ->prefix('/static/');
} => 'static';
# --- 

sub _action
{
    my $q = shift;
    my $value = shift;
    my $action = $action_map{ $q } or die "invalid action: $q";

    # just try it..
    if (ref $action eq 'ARRAY')
    {
        my ($o, $m) = @$action;
        $mpd->$o->$m($value);
    } else
    {
        $mpd->$action($value);
    }
}

sub _status
{
    # TODO: only fetch really needed values i.e. songinfo does not change until the song changes
    my $current = $mpd->current;
    my $status = $mpd->status;
    my $stats = $mpd->stats;

    my ($pos, $length);
    if (my $t = $status->time)
    {
        $pos = $t->seconds_sofar;
        $length = $current->time || '';
    }

    return
    (
         current => $current,
         status => $status,
         length => $length,
         pos => $pos
    )
}


app->start;

__DATA__

@@ player.html.ep
% layout 'default';
<div id="player">
    <div id="volume"></div>
    <div id="display">
        <span id="artist"><%= eval { $current->artist } %></span><br />
        <span id="title"><%= eval { $current->title } %></span>
        <span id="album">(<%= eval { $current->album } %>)</span>
        <span id="timer"><%= eval { $current->time } %></span>
    </div>
    <span id="control">
    <a id="play"        href="<%= url_for('action', action => 'play') %>">|&gt;</a>
    <a id="stop"        href="<%= url_for('action', action => 'stop') %>">[ ]</a>
    <a id="playpause"   href="<%= url_for('action', action => 'playpause') %>">|&gt;/||</a>
    <a id="next"        href="<%= url_for('action', action => 'next') %>">&rang;&rang;</a>
    <a id="prev"        href="<%= url_for('action', action => 'prev') %>">&lang;&lang;</a>
    </span>
    <div id="seek"></div>
    <p><a href="<%= url_for('editor') %>">manage playlist</a></p>
</div>

@@ editor.html.ep
% layout 'default';

    <div id="collection">
        <h1>Collection</h1>
        <div id="files">
            <h2>Files</h2>
            <form action="<%= url_for 'action_post' %>/collection" method='post'>
                <select name="data" multiple>
% for my $directory (@$directories) {
                    <option value="<%= $directory->directory %>" class="directory"> <%= $directory->directory %>
% }
% for my $song (@$songs) {
                    <option value="<%= $song->file %>" class="directory"> <%= $song->directory %>
% }
                </select>
                <input type="submit" name="action" value="to playlist">
                <input type="submit" name="action" value="update db">
            </form>
            JS Button:
            <input type="button" value="add" id="playlist_add" />
            <a href="<%= url_for('editor', path => $parent) %>">back to <%= $parent %></a>
        </div>

        <div id="directories">
            <h2>Directories</h2>
            <ul>
% for my $directory (@$directories) {
                <li><a href="<%= url_for('editor', path => $directory->directory) %>"><%= $directory->directory %></a></li>
% }
            </ul>
        </div>

        <div id="playlists">
            <h2>Playlists</h2>
            <ul>
% for my $playlist (@$playlists) {
                <li>
                    <a href="<%= url_for('action', action => 'playlist_load', value => $playlist->playlist) %>">
                        <%= $playlist->playlist %>
                    </a>
                </li>
% }
            </ul>
        </div>

    </div>
    <div id="playlist">
        <h1>Playlist</h1>
        <h2>Entries</h2>
        <form action="<%= url_for('action_post') %>/playlist" method="post">
            <select name="data" multiple>
% for my $song ( $playlist->as_items ) {
                <option value="<%= $song->id %>">
                <span id="info">
                    <span><%= $song->pos %></span>
                    <span><%= $song->artist || $song->file %></span>
                    <span><%= $song->name %></span>
                    <span><%= $song->album %></span>
                    <span><%= $song->date %></span>
                    <span><%= $song->time %></span>
                </span>
                </option>
% }
            </select>
            <input type="submit" name="action" value="delete" />
            <input type="submit" name="action" value="clear" />
            <input type="submit" name="action" value="play" />
        </form>
        JS Button:
    <input type="button" value="clear" id="playlist_clear" />
    </div>


@@ layouts/default.html.ep
<!doctype html>
<head>
 <style type="text/css">
<!--
    a { text-decoration: none; color: black; }

    #player
    {
        position: absolute;
        border: 1px solid black;
        width: auto;
        background-color: gray;
    }

    #player form
    {
        margin: 1em;
    }
    #volume { float: left;}

    #display
    {
        background-color: green;
        border: 0.5em ridge green;
        padding: 0.5em;
         margin-bottom: 1em;
    color: white;
    }

    #artist { font-size: 24pt }
    #album { font-size: 18pt }
    #control { font-size: 24pt; padding: 0.5em; width: 100%}
    #control a
    {
        padding: 0.3em;
        background-color: #aaa;
        border: 3px ridge #aaa;
        text-align: center;
    }

    #control a:hover
    {
        border-style: inset;
    }
    #title
    {
        font-size: 18pt;
        margin-left: 1em;
    }

    #collection { float: left; min-height: 10em; background-color: #099; width: 50%;}
    #playlist { float: right; min-height: 10em; background-color: #911; width: 50%;}

    select { width: 98%; height: 30em; };

    .ui-selected { background-color: red; }
    .ui-selecting { background-color: orange; }


-->
 </style>
 <link type="text/css" href="<%= url_for('static', path => 'css/ui-lightness/jquery-ui-1.8.4.custom.css') %>" rel="stylesheet" />   
 <script type="text/javascript" src="<%= url_for('static', path => '/js/jquery-1.4.2.min.js') %>"></script>
 <script type="text/javascript" src="<%= url_for('static', path => '/js/jquery-ui-1.8.4.custom.min.js') %>"></script>
 <script type="text/javascript" src="<%= url_for('static', path => '/js/jquery.dump.js') %>"></script>

 <script>
function update(data)
{

    $("#artist").html(data.artist);
    $("#title").html(data.title);
    $("#album").html(data.album);
    $("#timer").html(data.timer);


    $("#volume").slider
    ({
        orientation: 'vertical',
        change: volume,
        value: data.volume
    });

    $("#seek").slider
    ({
        change: seek,
        value: data.pos,
        max: data.length,
    });
}
 
function volume(event, ui)
{
    if(event.originalEvent == undefined) { return };
    var volume = $('#volume').slider('option', 'value');
    rpc('volume', volume);
}

function seek(event, ui)
{
    if(event.originalEvent == undefined) { return };
    var seek = $('#seek').slider('option', 'value');
    rpc('seek', seek);
}

function rpc(action, value)
{
    var href = '<%= url_for('rpc') %>';

    if (action) { href = href + '/' + action }

    if (typeof(value) == 'object')
    {
        $.post(href, {"data": value}, update);
    } else
    {
        if (value) { href = href + '/' + value }

        $.getJSON(href, update);
    }
}

function init()
{
    $("#file_list").selectable();
    $("#play_list").selectable();

    $("#playlist_add").click(function()
    {
        rpc('playlist_add', $("#files .ui-selected").map(function() { return this.innerHTML }).get());
    });
    $("#playlist_clear").click(function() { rpc('playlist_clear') });
}
 $(document).ready(function() { init(); rpc(); setInterval(function() { rpc() }, 3000) });

 </script>
<body>
    <%== content %>
    <br />
    <pre><div id="debug"></div></pre>
</body>
</html>



@@ exception.html.ep
<!doctype html><html>
    <head><title>Error</title></head>
    <body><h2>Error</h2></body>
</html>

